<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7fp/S0JQ9grzSJ8AAAAASUVORK5CYII=
</value>
  </data>
</root>